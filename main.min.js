const showdown=window.showdown,showdownKatex=window.showdownKatex,converter=new showdown.Converter({extensions:[showdownKatex({displayMode:!0,throwOnError:!1,delimiters:[{left:"$",right:"$",display:!1},{left:"~",right:"~",display:!1,asciimath:!0}],errorColor:"#1500ff"})]});let currentCard=0,currentAnno=0,values=[],github_url="",flipped=!1;const card=document.querySelector(".card"),header=document.querySelector("header"),annotationDiv=document.querySelector(".annotations"),annotations=document.querySelectorAll(".annotations div");window.onload=()=>{annotations.forEach(b=>{b.addEventListener("click",()=>{location.href=b.textContent})});setInterval(changeAnnotation,9000),document.getElementById("url").addEventListener("keypress",a=>{a.preventDefault(),"Enter"===a.key&&siteOpen()})};function changeAnnotation(){currentAnno+=1,annotations[currentAnno]?1<=currentAnno?(annotations[currentAnno-1].classList.add("hidden"),annotations[currentAnno].classList.remove("hidden")):(annotations[annotations.length-1].classList.add("hidden"),annotations[currentAnno].classList.remove("hidden")):(currentAnno=0,annotations[annotations.length-1].classList.add("hidden"),annotations[currentAnno].classList.remove("hidden"))}function updateCard(a,b=!1){if(b||(currentCard+=a?1:-1),flipped=!1,currentCard>(values.length-1)/2)return void window.alert("cards finished!");if(0>currentCard)return void window.alert("wrong way!");let[c,d]=[values[2*currentCard],values[2*currentCard+1]],e=`
    <div class="front">
      ${converter.makeHtml(c)}
    </div>
    <div class="back">
      ${converter.makeHtml(d)}
    </div>
    <img class="button flip" src="img/flip.svg">
    <img class="button last" src="img/back.svg">
  `;card.innerHTML=e,card.classList.remove("flipped")}async function cardData(a){let b=a.match(/https?:\/\/github.com\/([a-zA-Z0-9-]*\/[^!@#$%^&*()_+-={}\[\];:'",<.>/?`~]+\/?)/);return b?void fetch("https://raw.githubusercontent.com/"+b[1]+"/master/cards.md").then(function(a){return a.text().then(function(a){values=a.split(/\n/),updateCard(!0,!0),card.classList.remove("hidden")})}):(alert("Not a valid url! Make sure you are using the github repository"),void location.reload())}function flipCard(){flipped=!0,card.classList.add("flipped"),document.querySelector(".flip").style.visibility="visible",document.querySelector(".last").style.visibility="visible"}function makeKeys(){document.addEventListener("keydown",a=>{switch(a.key){case"ArrowRight":updateCard(!0);break;case"ArrowLeft":updateCard(!1);break;case"ArrowUp":document.querySelector(".flip").click();break;default:}})}function siteOpen(){document.removeEventListener("click",open),header.classList.add("hidden"),annotationDiv.classList.add("hidden"),github_url=document.getElementById("url").value,cardData(github_url),card.addEventListener("click",()=>{flipped?updateCard(!0):(flipCard(),document.querySelector(".flip").addEventListener("click",a=>{a.stopPropagation(),card.classList.toggle("flipped")}),document.querySelector(".last").addEventListener("click",a=>{a.stopPropagation(),updateCard(!1)}))}),makeKeys()}